syntax = "proto3";

message Ping {}

message Pong {}

message HelloRequest {
    string name = 1;
}

message HelloResponse {
    string message = 1;
}

message HelloStreamRequest {
    string name = 1;
}

message HelloStreamResponse {
    string message = 1;
}

message StdinStreamRequest {
    string name = 1;
}

message StdinStreamResponse {
    bytes message = 1;
}

message HtopStreamRequest {}

message HtopStreamResponse {
    bytes message = 1;
}

service Api {
    rpc Probe(Ping) returns (Pong) {}
    rpc Hello(HelloRequest) returns (HelloResponse) {}
    rpc HelloStream(HelloStreamRequest) returns (stream HelloStreamResponse) {}
    rpc StdinStream(StdinStreamRequest) returns (stream StdinStreamResponse) {}
    rpc HtopStream(HtopStreamRequest) returns (stream HtopStreamResponse) {}
}

// can grpc-web client listen on server requests?
/*
service Hub {
    rpc ResizeTerminal(stream ResizeRequest) returns () {}
    rpc Input(stream InputRequest) returns () {}

    rpc Output(stream OutputRequest)
}

service Client {
    rpc Output(stream OutputRequest)
    rpc Close()
}

service Slave {
    rpc ResizeTerminal(stream OutputRequest)
    rpc Input(stream OutputRequest)
    rpc Close()
}

or

service Slave/Hub/Client {
    rpc Send(stream Message) return (stream Message) {};
}

message Message {
    string type = 1;
    string body = 2;
}
*/

service BidiStream {
    rpc Send(stream Message) returns (stream Message) {};
}

message Message {
    bytes type = 1;
    bytes body = 2;
}
