// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ping struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

type Pong struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HelloStreamRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloStreamRequest) Reset()         { *m = HelloStreamRequest{} }
func (m *HelloStreamRequest) String() string { return proto.CompactTextString(m) }
func (*HelloStreamRequest) ProtoMessage()    {}
func (*HelloStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *HelloStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloStreamRequest.Unmarshal(m, b)
}
func (m *HelloStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloStreamRequest.Marshal(b, m, deterministic)
}
func (m *HelloStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloStreamRequest.Merge(m, src)
}
func (m *HelloStreamRequest) XXX_Size() int {
	return xxx_messageInfo_HelloStreamRequest.Size(m)
}
func (m *HelloStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloStreamRequest proto.InternalMessageInfo

func (m *HelloStreamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloStreamResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloStreamResponse) Reset()         { *m = HelloStreamResponse{} }
func (m *HelloStreamResponse) String() string { return proto.CompactTextString(m) }
func (*HelloStreamResponse) ProtoMessage()    {}
func (*HelloStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *HelloStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloStreamResponse.Unmarshal(m, b)
}
func (m *HelloStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloStreamResponse.Marshal(b, m, deterministic)
}
func (m *HelloStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloStreamResponse.Merge(m, src)
}
func (m *HelloStreamResponse) XXX_Size() int {
	return xxx_messageInfo_HelloStreamResponse.Size(m)
}
func (m *HelloStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloStreamResponse proto.InternalMessageInfo

func (m *HelloStreamResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StdinStreamRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StdinStreamRequest) Reset()         { *m = StdinStreamRequest{} }
func (m *StdinStreamRequest) String() string { return proto.CompactTextString(m) }
func (*StdinStreamRequest) ProtoMessage()    {}
func (*StdinStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *StdinStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StdinStreamRequest.Unmarshal(m, b)
}
func (m *StdinStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StdinStreamRequest.Marshal(b, m, deterministic)
}
func (m *StdinStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StdinStreamRequest.Merge(m, src)
}
func (m *StdinStreamRequest) XXX_Size() int {
	return xxx_messageInfo_StdinStreamRequest.Size(m)
}
func (m *StdinStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StdinStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StdinStreamRequest proto.InternalMessageInfo

func (m *StdinStreamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StdinStreamResponse struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StdinStreamResponse) Reset()         { *m = StdinStreamResponse{} }
func (m *StdinStreamResponse) String() string { return proto.CompactTextString(m) }
func (*StdinStreamResponse) ProtoMessage()    {}
func (*StdinStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *StdinStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StdinStreamResponse.Unmarshal(m, b)
}
func (m *StdinStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StdinStreamResponse.Marshal(b, m, deterministic)
}
func (m *StdinStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StdinStreamResponse.Merge(m, src)
}
func (m *StdinStreamResponse) XXX_Size() int {
	return xxx_messageInfo_StdinStreamResponse.Size(m)
}
func (m *StdinStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StdinStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StdinStreamResponse proto.InternalMessageInfo

func (m *StdinStreamResponse) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type HtopStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HtopStreamRequest) Reset()         { *m = HtopStreamRequest{} }
func (m *HtopStreamRequest) String() string { return proto.CompactTextString(m) }
func (*HtopStreamRequest) ProtoMessage()    {}
func (*HtopStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *HtopStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HtopStreamRequest.Unmarshal(m, b)
}
func (m *HtopStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HtopStreamRequest.Marshal(b, m, deterministic)
}
func (m *HtopStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HtopStreamRequest.Merge(m, src)
}
func (m *HtopStreamRequest) XXX_Size() int {
	return xxx_messageInfo_HtopStreamRequest.Size(m)
}
func (m *HtopStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HtopStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HtopStreamRequest proto.InternalMessageInfo

type HtopStreamResponse struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HtopStreamResponse) Reset()         { *m = HtopStreamResponse{} }
func (m *HtopStreamResponse) String() string { return proto.CompactTextString(m) }
func (*HtopStreamResponse) ProtoMessage()    {}
func (*HtopStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *HtopStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HtopStreamResponse.Unmarshal(m, b)
}
func (m *HtopStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HtopStreamResponse.Marshal(b, m, deterministic)
}
func (m *HtopStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HtopStreamResponse.Merge(m, src)
}
func (m *HtopStreamResponse) XXX_Size() int {
	return xxx_messageInfo_HtopStreamResponse.Size(m)
}
func (m *HtopStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HtopStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HtopStreamResponse proto.InternalMessageInfo

func (m *HtopStreamResponse) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*Ping)(nil), "Ping")
	proto.RegisterType((*Pong)(nil), "Pong")
	proto.RegisterType((*HelloRequest)(nil), "HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "HelloResponse")
	proto.RegisterType((*HelloStreamRequest)(nil), "HelloStreamRequest")
	proto.RegisterType((*HelloStreamResponse)(nil), "HelloStreamResponse")
	proto.RegisterType((*StdinStreamRequest)(nil), "StdinStreamRequest")
	proto.RegisterType((*StdinStreamResponse)(nil), "StdinStreamResponse")
	proto.RegisterType((*HtopStreamRequest)(nil), "HtopStreamRequest")
	proto.RegisterType((*HtopStreamResponse)(nil), "HtopStreamResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x5b, 0x5c, 0x27, 0x7b, 0x6e, 0x82, 0xff, 0x0c, 0x1c, 0x39, 0x49, 0x4e, 0xf5, 0xf2,
	0x57, 0xf4, 0x24, 0x78, 0xf1, 0xb6, 0xe3, 0xd8, 0x3e, 0x41, 0x87, 0xa1, 0x14, 0xd6, 0x24, 0x36,
	0xf1, 0xf3, 0x2b, 0x0d, 0x8e, 0xb5, 0xb4, 0xb8, 0x9d, 0xda, 0x84, 0xf7, 0x7e, 0xf0, 0x7e, 0x04,
	0xb3, 0xc2, 0x55, 0xec, 0x1a, 0x1b, 0xac, 0x9a, 0x62, 0xb2, 0xa9, 0x4c, 0x19, 0xbf, 0xd6, 0x94,
	0x4a, 0x61, 0xbe, 0xd6, 0x87, 0x83, 0xdd, 0xea, 0xaf, 0x6f, 0xed, 0x03, 0x11, 0x26, 0xa6, 0xa8,
	0xf5, 0x2a, 0x7d, 0x48, 0xf3, 0xd9, 0x36, 0xfe, 0xab, 0x47, 0x2c, 0xfe, 0x32, 0xde, 0x59, 0xe3,
	0x35, 0xad, 0x70, 0x5d, 0x6b, 0xef, 0x8b, 0xf2, 0x98, 0x3b, 0x1e, 0x55, 0x0e, 0x8a, 0xd1, 0x5d,
	0x68, 0x74, 0x51, 0xff, 0x07, 0x7d, 0x82, 0xe8, 0x25, 0x2f, 0x41, 0xef, 0xc2, 0x67, 0x65, 0x2e,
	0x42, 0xf7, 0x92, 0xe3, 0xe8, 0xf9, 0x09, 0x2d, 0x70, 0xb7, 0x0e, 0xd6, 0xf5, 0xc8, 0x8a, 0x41,
	0xdd, 0xcb, 0x73, 0x90, 0x97, 0x9f, 0x14, 0x57, 0x1f, 0xae, 0xa2, 0x7b, 0x64, 0x9b, 0xc6, 0xee,
	0x35, 0x65, 0xdc, 0x9a, 0x96, 0x19, 0x47, 0xd1, 0x09, 0xe5, 0xc8, 0xe2, 0x62, 0x5a, 0x70, 0x57,
	0xb9, 0xbc, 0xe5, 0x9e, 0x5d, 0x95, 0xd0, 0x3b, 0x6e, 0x3a, 0x6e, 0x48, 0xf0, 0xd0, 0xa9, 0x5c,
	0xf2, 0x88, 0x3e, 0x95, 0x3c, 0xa7, 0x6d, 0xbb, 0x33, 0x9f, 0x04, 0x0f, 0xb5, 0xc9, 0x25, 0x8f,
	0x18, 0x8a, 0xed, 0x37, 0xe0, 0x34, 0x9b, 0x88, 0x07, 0x62, 0xa4, 0xe0, 0xa1, 0x97, 0xb6, 0xba,
	0x9f, 0xc6, 0x27, 0xf6, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xed, 0xba, 0xe7, 0x5c, 0x6f, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiClient is the client API for Api service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiClient interface {
	Probe(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	HelloStream(ctx context.Context, in *HelloStreamRequest, opts ...grpc.CallOption) (Api_HelloStreamClient, error)
	StdinStream(ctx context.Context, in *StdinStreamRequest, opts ...grpc.CallOption) (Api_StdinStreamClient, error)
	HtopStream(ctx context.Context, in *HtopStreamRequest, opts ...grpc.CallOption) (Api_HtopStreamClient, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) Probe(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/Api/Probe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/Api/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) HelloStream(ctx context.Context, in *HelloStreamRequest, opts ...grpc.CallOption) (Api_HelloStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Api_serviceDesc.Streams[0], "/Api/HelloStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiHelloStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Api_HelloStreamClient interface {
	Recv() (*HelloStreamResponse, error)
	grpc.ClientStream
}

type apiHelloStreamClient struct {
	grpc.ClientStream
}

func (x *apiHelloStreamClient) Recv() (*HelloStreamResponse, error) {
	m := new(HelloStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *apiClient) StdinStream(ctx context.Context, in *StdinStreamRequest, opts ...grpc.CallOption) (Api_StdinStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Api_serviceDesc.Streams[1], "/Api/StdinStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiStdinStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Api_StdinStreamClient interface {
	Recv() (*StdinStreamResponse, error)
	grpc.ClientStream
}

type apiStdinStreamClient struct {
	grpc.ClientStream
}

func (x *apiStdinStreamClient) Recv() (*StdinStreamResponse, error) {
	m := new(StdinStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *apiClient) HtopStream(ctx context.Context, in *HtopStreamRequest, opts ...grpc.CallOption) (Api_HtopStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Api_serviceDesc.Streams[2], "/Api/HtopStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiHtopStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Api_HtopStreamClient interface {
	Recv() (*HtopStreamResponse, error)
	grpc.ClientStream
}

type apiHtopStreamClient struct {
	grpc.ClientStream
}

func (x *apiHtopStreamClient) Recv() (*HtopStreamResponse, error) {
	m := new(HtopStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ApiServer is the server API for Api service.
type ApiServer interface {
	Probe(context.Context, *Ping) (*Pong, error)
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
	HelloStream(*HelloStreamRequest, Api_HelloStreamServer) error
	StdinStream(*StdinStreamRequest, Api_StdinStreamServer) error
	HtopStream(*HtopStreamRequest, Api_HtopStreamServer) error
}

// UnimplementedApiServer can be embedded to have forward compatible implementations.
type UnimplementedApiServer struct {
}

func (*UnimplementedApiServer) Probe(ctx context.Context, req *Ping) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Probe not implemented")
}
func (*UnimplementedApiServer) Hello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedApiServer) HelloStream(req *HelloStreamRequest, srv Api_HelloStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method HelloStream not implemented")
}
func (*UnimplementedApiServer) StdinStream(req *StdinStreamRequest, srv Api_StdinStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method StdinStream not implemented")
}
func (*UnimplementedApiServer) HtopStream(req *HtopStreamRequest, srv Api_HtopStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method HtopStream not implemented")
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Api/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Probe(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Api/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_HelloStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HelloStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServer).HelloStream(m, &apiHelloStreamServer{stream})
}

type Api_HelloStreamServer interface {
	Send(*HelloStreamResponse) error
	grpc.ServerStream
}

type apiHelloStreamServer struct {
	grpc.ServerStream
}

func (x *apiHelloStreamServer) Send(m *HelloStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Api_StdinStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StdinStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServer).StdinStream(m, &apiStdinStreamServer{stream})
}

type Api_StdinStreamServer interface {
	Send(*StdinStreamResponse) error
	grpc.ServerStream
}

type apiStdinStreamServer struct {
	grpc.ServerStream
}

func (x *apiStdinStreamServer) Send(m *StdinStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Api_HtopStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HtopStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServer).HtopStream(m, &apiHtopStreamServer{stream})
}

type Api_HtopStreamServer interface {
	Send(*HtopStreamResponse) error
	grpc.ServerStream
}

type apiHtopStreamServer struct {
	grpc.ServerStream
}

func (x *apiHtopStreamServer) Send(m *HtopStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Probe",
			Handler:    _Api_Probe_Handler,
		},
		{
			MethodName: "Hello",
			Handler:    _Api_Hello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HelloStream",
			Handler:       _Api_HelloStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StdinStream",
			Handler:       _Api_StdinStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "HtopStream",
			Handler:       _Api_HtopStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
